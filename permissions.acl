/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample access control list.
 */
rule EverybodyCanReadEverything {
    description: "Allow all participants read access to all resources"
    participant: "org.example.basic.User"
    operation: READ
    resource: "org.example.basic.*"
    action: ALLOW
}

rule EverybodyCanRegisterToMeetup {
    description: "Allow all participants to register to meetups"
    participant: "org.example.basic.User"
    operation: CREATE, UPDATE
    resource: "org.example.basic.RegisterToMeetup"
    transaction: "org.example.basic.RegisterToMeetup"
    action: ALLOW
}

rule EverybodyCanCreateMeetup {
    description: "Allow all participants to register to meetups"
    participant: "org.example.basic.User"
    operation: CREATE
    resource: "org.example.basic.Meetup"
    action: ALLOW
}

rule EverybodyCanUpdateMeetup {
    description: "Allow all participants to register to meetups"
    participant: "org.example.basic.User"
    operation: UPDATE
    resource: "org.example.basic.Meetup"
    transaction: "org.example.basic.RegisterToMeetup"
    action: ALLOW
}

rule OrganizerHasFullAccessToAttendMeetups {
    description: "Allow all organizers full access to their meetups"
    participant(p): "org.example.basic.User"
    operation: ALL
    resource(r): "org.example.basic.AttendMeetup"
    transaction(tx): "org.example.basic.AttendMeetup"
    condition: (
     tx.meetup.organizers.some(function (organizer) {
        return organizer.getIdentifier() === p.getIdentifier();  
        } )
   )
    action: ALLOW
}

rule OrganizerHasFullAccessToTheirMeetups {
    description: "Allow all organizers full access to their meetups"
    participant(p): "org.example.basic.User"
    operation: ALL
    resource(r): "org.example.basic.Meetup"
    transaction(tx): "org.example.basic.AttendMeetup"
    condition: (
     r.organizers.some(function (organizer) {
        return organizer.getIdentifier() === p.getIdentifier();  
        } )
   )
    action: ALLOW
}

rule OrganizerCanUpdateRepWallet {
    description: "Allow all organizers to update reputation"
    participant(p): "org.example.basic.User"
    operation: UPDATE
    resource(r): "org.example.basic.RepWallet"
    transaction(tx): "org.example.basic.AttendMeetup"
    condition: (r.owner.getIdentifier() === tx.user.user.getIdentifier())
    action: ALLOW
}

rule OwnerHasFullAccessToTheirAssets {
    description: "Allow all participants full access to their assets"
    participant(p): "org.example.basic.User"
    operation: ALL
    resource(r): "org.example.basic.RepWallet"
    condition: (r.owner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule SystemACL {
    description: "System ACL to permit all access"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}